openapi: 3.0.1
info:
  title: Acesso cidadão
  description: API para consumo de informações relacionadas aos cidadãos, organizaçõese
    e serviços do governo do estado do Ceará
  contact:
    email: felipe.marcel@insightlab.ufc.br
  version: 0.0.1
servers:
- url: http://18.212.0.161:9000/api
paths:

  /auth:
    post:
      tags:
      - Autenticação
      summary: Autenticação e login pessoa física e juridica
      operationId: authentication
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/UserCredentials'
                - $ref: '#/components/schemas/AppCredentials'
                - $ref: '#/components/schemas/DigitalCerticateCredentials'
                - $ref: '#/components/schemas/CompanyCredentials'
                - $ref: '#/components/schemas/CompanyDigitalCertificateCredentials'
            examples:
              user:
                value:
                  cpf: "11122233344"
                  password: "cef14f3c248582f2cfa2b8152c4c2f919c27da88c7f0353d3a032aa3c8ba451b"
              app:
                value:
                  appKey: "e70b335a916a6429f9964c5e29e69048"
                  appServerKey: "80c93ebdf57d3836da3086d3d0a998ee"
                  secret: "E5B9BEAE815BD6BD98434ABD46A4A"
              digital-cert:
                value:
                  cpf: "11122233344"
                  token: ""
                  certificate: ""
                  signature: ""
              company:
                value:
                  cnpj: "94163589000192"
                  password: "ea417877b08c9f7cc55086e5e22499416b27d988a47434ebfdf9d31ad991c38c"
              companyDigitalCerfificate:
                value:
                  cpf: "94163589000192"
                  token: ""
                  certificate: ""
                  signature: ""
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthBodyResponse'
        400:
          description: Não foi possível fazer o login. Verifique se suas credenciais estão corretas e tente outra vez. 
          
      security:
      - petstore_auth:
        - write:pets
        - read:pets
      x-codegen-request-body-name: body
  /auth/generate:
    post:
      tags:
      - Autenticação
      summary: Gerar token grant para especificar restrinções e uso do usuário na aplicação
      operationId: redirect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionCredentials'
            example:
              token: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MTg4NjgxNzMsImlkZW50aWZpZXIiOiIwNTc1MDAxOTMzMCIsInRva2VuVHlwZSI6ImdyYW50IiwidG9rZW5OdW1iZXIiOjEsImNsaWVudFR5cGUiOiJ1c2VyIn0.uzmkXqDsh4f4vKFjfQ33GvHYg1EitAkkaiMZi-VYO4c"
              appServerKey: "80c93ebdf57d3836da3086d3d0a998ee"
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthBodyResponse'
        400:
          description: Não existe aplicação que válida com os dados informados.
      security:
      - petstore_auth:
        - write:pets
        - read:pets
      x-codegen-request-body-name: body
  /auth/me:
    get:
      tags:
      - Autenticação
      summary: Retorna informações daquele usuário
      operationId: receiveCustomerInformation
      parameters:
      - in: header
        name: Header
        description: A requisição espera receber no cabeçalho os parâmetros Token e Accept-Client. O primeiro está relacionado ao token obtido na requisição /auth/generate e o segundo está relacionado ao id da da aplicação ou appServerKey.
        required: true
        schema:
          $ref: '#/components/schemas/Me'
        example:
          Authorization: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MTg5NDIzODAsImlkZW50aWZpZXIiOiIwNTc1MDAxOTMzMCIsInRva2VuVHlwZSI6ImdyYW50IiwidG9rZW5OdW1iZXIiOjEsImNsaWVudFR5cGUiOiJ1c2VyIn0.4Pb9_z7B-00AOGtcbFtHFFOaukX_YQ4Chrc1C6jeW7o"
          Accept-Client: "80c93ebdf57d3836da3086d3d0a998ee"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthBodyResponse'
        400:
          description: O token não pertence a aplicação
      security:
      - petstore_auth:
        - write:pets
        - read:pets
      x-codegen-request-body-name: body
  /auth/digital-cert:
    get:
      tags:
      - Autenticação
      summary: Obtém um token de uso único por requisição para iniciar o fluxo de autenticação usando certificado digital
      operationId: require
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthBodyResponse'
      security:
      - petstore_auth:
        - write:pets
        - read:pets
      x-codegen-request-body-name: body
  
  /citizen:
    post:
      tags:
      - Cadastro
      summary: Registrar cidadão
      operationId: registerCitizen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CitizenRegistry'
            example:
              email: "uqs.dsilva@gmail.com"
              identifier: "96914479089"
              name: "Ulisses Silva"
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthBodyResponse'
        400:
          description: Cpf ou email já em uso, verifique os dados
      security:
      - petstore_auth:
        - write:pets
        - read:pets
      x-codegen-request-body-name: body
      
  /company:
    post:
      tags:
      - Cadastro
      summary: Registrar empresa
      operationId: registerCompany
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRegistration'
            example:
              companyName: "empresa"
              cnpj: "96914479089"
              password: "ea417877b08c9f7cc55086e5e22499416b27d988a47434ebfdf9d31ad991c38c"
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthBodyResponse'
        400:
          description: Cnpj já em uso, verifique os dados
      security:
      - petstore_auth:
        - write:pets
        - read:pets
      x-codegen-request-body-name: body
      
components:
  schemas:
    UserCredentials:
      type: object
      properties:
        cpf:
          type: string
          description: CPF do usuário
        password:
          type: string
          description: 'Senha do usuário. Obs: Aplicar algoritmo sha256.'
    AppCredentials:
      type: object
      properties:
        appKey:
          type: string
        appServerKey:
          type: string
        secret:
          type: string
    DigitalCerticateCredentials:
      type: object
      properties:
        cpf:
          type: string
          description: cpf do usuário
        token:
          type: string
          description: tolken gerado pela aplicação
        certificate:
          type: string
          description: ''
        signature:
          type: string
          description: ''
    CompanyCredentials:
      type: object
      properties:
        cnpj:
          type: string
          description: cnpj da empresa
        password:
          type: string
          description: "Senha do usuário. Obs: Aplicar algoritmo sha256"
    CompanyDigitalCertificateCredentials:
      type: object
      properties:
        cnpj:
          type: string
          description: cnpj da empresa
        token:
          type: string
          description: tolken gerado pela aplicação
        certificate:
          type: string
          description: ''
        signature:
          type: string
          description: ''
    SessionCredentials:
      type: object
      properties:
        token:
          type: string
          description: token de acesso fornecido pela aplicação
        appServerKey:
          type: string
          description: é a mesma chave fornecida pela aplicação
    Me:
      type: object
      properties:
        Authorization:
          type: string
          description: Token obtido no endpoint /auth/generate
        Accept-Client:
          type: string
    CitizenRegistry:
      type: object
      properties:
        email:
          type: string
          description: email do cidadão
        identifier:
          type: string
          description: cpf do cidadão
        name:
          type: string
          description: Nome do cidadão
    CompanyRegistration:
      type: object
      properties:
        companyName:
          type: string
          description: razão soxial da empresa
        cnpj:
          type: string
          description: "Senha do usuário. Obs: Aplicar algoritmo sha256"
        password:
          type: string
          description: Nome do cidadão
    ClientInfo:
      type: object
      properties:
        userId:
          type: string
          description: Identificador do usuário ou da aplicação
        name:
          type: string
          description: Nome do usuário ou da aplicação
        email:
          type: string
          description: Email do usuário
        organization:
          type: string
          description: Organização a qual o usuário pertence
    AuthBodyResponse:
      type: object
      properties:
        client:
          $ref: '#/components/schemas/ClientInfo'
        token:
          type: string
          description: Token Jwt.
        tokenType:
          type: string
    ApiResponse:
      type: object
      properties:
        status:
          type: integer
          format: int32
        details:
          type: string
        message:
          type: string
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://petstore.swagger.io/oauth/dialog
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
